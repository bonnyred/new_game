name: Build Godot iOS App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-14  # macOS 14 has Xcode 16
    timeout-minutes: 30

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Godot Export Templates
      run: |
        mkdir -p ~/Library/Application\ Support/Godot/export_templates/4.2.2.stable
        curl -L https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_export_templates.tpz -o templates.tpz
        mkdir templates
        tar -xf templates.tpz -C templates
        rm templates.tpz

        echo "Checking contents of extracted templates:"
        ls -R templates

        echo "Moving iOS export template to expected location..."
        cp templates/templates/ios.zip ~/Library/Application\ Support/Godot/export_templates/4.2.2.stable/ios.zip

        echo "Listing contents of ios.zip:"
        unzip -l ~/Library/Application\ Support/Godot/export_templates/4.2.2.stable/ios.zip

    - name: Install Godot Engine CLI
      run: |
        curl -L https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_macos.universal.zip -o godot.zip
        unzip godot.zip -d ~/godot
        chmod +x ~/godot/Godot.app/Contents/MacOS/Godot

    - name: Run Godot import step
      run: |
        ~/godot/Godot.app/Contents/MacOS/Godot --headless --editor --quit --verbose || true

    - name: Install Signing Certificate
      run: |
        echo "$IOS_CERT_P12_BASE64" | base64 --decode > certificate.p12
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security import certificate.p12 -k build.keychain -P "$IOS_CERT_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
      env:
        IOS_CERT_P12_BASE64: ${{ secrets.IOS_CERT_P12_BASE64 }}
        IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}

    - name: Install Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "$IOS_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/${IOS_PROVISIONING_UUID}.mobileprovision
      env:
        IOS_PROFILE_BASE64: ${{ secrets.IOS_PROFILE_BASE64 }}
        IOS_PROVISIONING_UUID: ${{ secrets.IOS_PROVISIONING_UUID }}

    - name: List available code signing identities
      run: |
        security find-identity -v -p codesigning

    - name: Inspect Provisioning Profile Details
      run: |
        echo "🔍 Decoding Provisioning Profile..."
        security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/${{ secrets.IOS_PROVISIONING_UUID }}.mobileprovision > profile.plist
    
        echo ""
        echo "📄 Provisioning Profile Details:"
        plutil -extract Name xml1 -o - profile.plist
        plutil -extract UUID xml1 -o - profile.plist
        plutil -extract TeamIdentifier xml1 -o - profile.plist
        plutil -extract Entitlements xml1 -o - profile.plist
        plutil -extract AppIDName xml1 -o - profile.plist
        plutil -extract ApplicationIdentifierPrefix xml1 -o - profile.plist



    - name: Export iOS Project
      run: |
        mkdir -p build/ios
        ~/godot/Godot.app/Contents/MacOS/Godot --headless --verbose --export-release "iOS (copy)" build/ios/test.xcodeproj


    - name: Create ExportOptions.plist
      run: |
        cat <<EOF > ExportOptions.plist
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>app-store</string>
          <key>teamID</key>
          <string>LDT3X4537N</string>
          <key>provisioningProfiles</key>
          <dict>
            <key>newer.game.test</key>
            <string>Prof 2</string>
          </dict>
          <key>signingStyle</key>
          <string>manual</string>
          <key>destination</key>
          <string>export</string>
        </dict>
        </plist>
        EOF



    - name: Archive iOS App
      run: |
        mkdir -p build/ios
        xcodebuild -project build/ios/test.xcodeproj \
          -scheme test \
          -configuration Release \
          -sdk iphoneos \
          -destination generic/platform=iOS \
          -archivePath build/ios/test.xcarchive \
          CODE_SIGN_IDENTITY="Apple Distribution" \
          PROVISIONING_PROFILE_SPECIFIER="Prof 2" \
          DEVELOPMENT_TEAM="LDT3X4537N" \
          archive
    
    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath build/ios/test.xcarchive \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath build/ios/exported


    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: godot-ios-app
        path: build/ios/exported
