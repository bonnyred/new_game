name: Build Godot iOS App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-14

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Godot Export Templates
      run: |
        mkdir -p ~/.local/share/godot/templates
        curl -L https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_export_templates.tpz -o templates.tpz
        tar -xvf templates.tpz -C ~/.local/share/godot/templates
        rm templates.tpz

    - name: Install Godot Engine CLI
      run: |
        curl -L https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_macos.universal.zip -o godot.zip
        unzip godot.zip -d ~/godot
        chmod +x ~/godot/Godot.app/Contents/MacOS/Godot

    - name: Decode and install signing certificate
      run: |
        echo "$IOS_CERT_P12_BASE64" | base64 --decode > certificate.p12
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security import certificate.p12 -k build.keychain -P "$IOS_CERT_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      env:
        IOS_CERT_P12_BASE64: ${{ secrets.IOS_CERT_P12_BASE64 }}
        IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}

    - name: Decode and install provisioning profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "$IOS_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      env:
        IOS_PROFILE_BASE64: ${{ secrets.IOS_PROFILE_BASE64 }}

    - name: Run Godot import step
      run: |
        ~/godot/Godot.app/Contents/MacOS/Godot --headless --editor --quit --verbose || true

    - name: Export iOS Project
      run: |
        mkdir -p build/ios
        ~/godot/Godot.app/Contents/MacOS/Godot --headless --export-release "iOS (copy)" build/ios/test.xcodeproj

    - name: Build Xcode Project with Manual Signing
      run: |
        xcodebuild -project build/ios/test.xcodeproj \
                   -scheme "test" \
                   -sdk iphoneos \
                   -configuration Release \
                   -archivePath build/ios/test.xcarchive \
                   -allowProvisioningUpdates \
                   CODE_SIGN_STYLE=Manual \
                   CODE_SIGN_IDENTITY="$IOS_CODE_SIGN_IDENTITY" \
                   PROVISIONING_PROFILE_SPECIFIER="$IOS_PROVISIONING_UUID" \
                   PRODUCT_BUNDLE_IDENTIFIER="$IOS_BUNDLE_ID" \
                   archive

        xcodebuild -exportArchive \
                   -archivePath build/ios/test.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath output

      env:
        IOS_CODE_SIGN_IDENTITY: ${{ secrets.IOS_CODE_SIGN_IDENTITY }}
        IOS_PROVISIONING_UUID: ${{ secrets.IOS_PROVISIONING_UUID }}
        IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}

    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: godot-ios-app
        path: output/*.ipa
